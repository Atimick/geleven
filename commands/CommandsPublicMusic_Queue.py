import discord
import asyncio
from discord import FFmpegPCMAudio
import time

class MusicQueue:
    def __init__(self):
        self.queue = []
        self.vc = None
        self.is_playing = False
        self.bot = None # B·∫ÆT BU·ªòC: L∆∞u tr·ªØ bot instance ƒë·ªÉ truy c·∫≠p loop an to√†n
        self.current_song = None
        self.start_time = None
    def add_song(self, song_data):
        self.queue.append(song_data)

    def get_next_song(self):
        return self.queue.pop(0) if self.queue else None

    def has_next(self):
        return len(self.queue) > 0

    async def stop(self):
        """D·ª´ng ph√°t v√† xo√° h√†ng ƒë·ª£i"""
        self.queue.clear()
        self.current_song = None
        self.start_time = None
        self.is_playing = False
        if self.vc and self.vc.is_connected():
            # ƒê·∫£m b·∫£o d·ª´ng voice client tr∆∞·ªõc khi disconnect
            if self.vc.is_playing() or self.vc.is_paused():
                self.vc.stop() 
            await self.vc.disconnect()
            self.vc = None

    async def play_next(self, channel: discord.TextChannel): # S·ª¨A: Thay interaction b·∫±ng channel
        if not self.queue or not self.vc:
            self.is_playing = False
            self.current_song = None
            self.start_time = None
            return

        song = self.get_next_song()
        self.is_playing = True
        self.current_song = song
        self.start_time = time.time()

        try:
            # Source file t·ª´ URL
            source = FFmpegPCMAudio(song['url'], before_options='-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5')
            
            # ƒê·∫£m b·∫£o d·ª´ng b√†i c≈© n·∫øu c√≥
            if self.vc.is_playing() or self.vc.is_paused():
                self.vc.stop()

            # S·ª¨A QUAN TR·ªåNG: S·ª≠ d·ª•ng bot.loop ƒë·ªÉ ƒë·∫∑t t√°c v·ª• cho after_song
            if self.bot is None:
                raise Exception("Bot instance ch∆∞a ƒë∆∞·ª£c g√°n cho MusicQueue.")

            after_func = lambda e: self.bot.loop.call_soon_threadsafe(
                asyncio.create_task, 
                self._after_song(channel) # Truy·ªÅn channel
            )
            
            self.vc.play(source, after=after_func)
            
            # G·ª≠i th√¥ng b√°o
            embed = discord.Embed(
                title="‚ñ∂Ô∏è ƒêang ph√°t",
                description=f"[{song['title']}]({song['webpage_url']})",
                color=discord.Color.green()
            )
            embed.set_footer(text=f"Y√™u c·∫ßu b·ªüi: {song['requester'].display_name}")
            await channel.send(embed=embed) # G·ª≠i v√†o channel

        except Exception as e:
            print(f"[L·ªñI PH√ÅT B√ÄI] {e}")
            await channel.send(f"‚ùå Kh√¥ng th·ªÉ ph√°t b√†i ti·∫øp theo: {e}") # S·ª¨A: G·ª≠i v√†o channel
            self.is_playing = False
            self.current_song = None
            self.start_time = None
            if self.vc and self.vc.is_connected():
                await self.vc.disconnect()
                self.vc = None

    async def _after_song(self, channel: discord.TextChannel): # S·ª¨A: Thay interaction b·∫±ng channel
        await asyncio.sleep(1)
        if self.has_next():
            await self.play_next(channel) # S·ª¨A: Truy·ªÅn channel
        else:
            self.is_playing = False
            self.current_song = None
            self.start_time = None
            
            # Kh·ªüi ƒë·ªông t√≠nh nƒÉng t·ª± ƒë·ªông ng·∫Øt k·∫øt n·ªëi
            await self._auto_disconnect_after_timeout(channel)

    async def _auto_disconnect_after_timeout(self, channel: discord.TextChannel, timeout: int = 300):
        await asyncio.sleep(timeout)
        # Ki·ªÉm tra l·∫°i: n·∫øu bot v·∫´n kh√¥ng ph√°t v√† v·∫´n ƒëang k·∫øt n·ªëi
        if not self.is_playing and self.vc and self.vc.is_connected():
            await self.vc.disconnect()
            self.vc = None
            try:
                await channel.send("üëã Bot ƒë√£ r·ªùi voice channel do kh√¥ng c√≤n b√†i ƒë·ªÉ ph√°t.")
            except:
                pass